# Config that filters the build jobs: only run new builds for the paths that are changed.
# Runs the continue_config.yml subsequently.
version: 2.1

# this allows you to use CircleCI's dynamic configuration feature
setup: true

# Pipeline parameters for nightly and regular test chain triggers.
parameters:
  run-nightly:
    type: boolean
    default: false
  run-test-chains-regularly:
    type: boolean
    default: false

# the path-filtering orb is required to continue a pipeline based on
# the path of an updated fileset see https://circleci.com/docs/2.0/using-dynamic-configuration/
orbs:
  path-filtering: circleci/path-filtering@0.1.7
  continuation: circleci/continuation@0.5.0

# Can add multiple workflows in setup since only one of these will run. Otherwise it's not possible: https://support.circleci.com/hc/en-us/articles/360060934851--Max-number-of-workflows-exceeded-error
workflows:
  always-run:
    # Don't run on scheduled pipelines and only on master or staging.
    when:
      and:
        - not: << pipeline.parameters.run-nightly >>
        - not: << pipeline.parameters.run-test-chains-regularly >>
        - or: 
          - equal: [ master, << pipeline.git.branch >> ]
          - equal: [ staging, << pipeline.git.branch >> ]
    jobs:
      # the path-filtering/filter job determines which pipeline parameters to update.
      - path-filtering/filter:
          name: check-updated-modules
          mapping: |
            services/monitor/.* run-build-monitor true
            services/server/.* run-build-server true
            packages/.* run-build-packages true
          # Compare against the last build of the branch not the default "main" branch
          base-revision: << pipeline.git.base_revision >>
          config-path: .circleci/continue_config.yml
  tagged_build_and_publish: # Triggered by a tag push. Runs separately for each tag.
    jobs:
      - npm-publish:
          filters:
            tags:
              only: /.*/ # Must always run as required by the build-push-* jobs
            branches:
              ignore: /.*/
      - build-push-monitor-amd64:
          filters:
            tags:
              only: /sourcify-monitor.*/ # docker image tag format
            branches:
              ignore: /.*/
          requires:
            - npm-publish
      - build-push-monitor-arm64:
          filters:
            tags:
              only: /sourcify-monitor.*/ # docker image tag format
            branches:
              ignore: /.*/
          requires:
            - npm-publish
      - build-push-server-amd64:
          filters:
            tags:
              only: /^sourcify-server.*/
            branches:
              ignore: /.*/
          requires:
            - npm-publish
      - build-push-server-arm64:
          filters:
            tags:
              only: /^sourcify-server.*/
            branches:
              ignore: /.*/
          requires:
            - npm-publish
      - publish-multiarch-images:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - build-push-monitor-amd64
            - build-push-server-amd64
            - build-push-monitor-arm64
            - build-push-server-arm64
  new-branch:
    when:
      and:
          - not: << pipeline.parameters.run-nightly >>
          - not: << pipeline.parameters.run-test-chains-regularly >>
          - not:
              equal: [ master, << pipeline.git.branch >> ]
          - not:
              equal: [ staging, << pipeline.git.branch >> ]
    jobs:
      - continuation/continue:
          name: continue-new-branch
          configuration_path: .circleci/new_branch.yml

  nightly:
    when: << pipeline.parameters.run-nightly >>
    jobs:
      - continuation/continue:
          name: continue-nightly
          configuration_path: .circleci/nightly.yml

  test-chains-regularly:
    when: << pipeline.parameters.run-test-chains-regularly >>
    jobs: 
      - continuation/continue:
          name: continue-test-chains-regularly
          configuration_path: .circleci/test-chains-regularly.yml


# Different than the one on continue_config.yml, this one DOES NOT persist the workspace and trigger a deploy job.
aliases:
  - &build-base
    docker:
      - image: cimg/base:2024.07
    resource_class: large
    parameters:
      run-build:
        type: boolean
        default: false
      run-build-2:
        type: boolean
        default: false
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: |
            git submodule init
            git submodule update --remote
      - setup_remote_docker:
          version: default
          docker_layer_caching: true
      - run:
          name: Build and push docker images
          command: |
            ./.circleci/scripts/build_and_publish_docker_images.sh 
      # If no build is needed, echo 0 to run as success 
      - run: echo 0
  - &build-base-arm64
    <<: *build-base
    resource_class: arm.large # override resource class

jobs:
  build-push-monitor-amd64:
    <<: *build-base
    environment:
      SERVICE: "monitor"
      DOCKER_BUILD_CONTEXT: "."
      DOCKERFILE: "services/monitor/Dockerfile"
  build-push-server-amd64:
    <<: *build-base
    environment:
      SERVICE: "server"
      DOCKER_BUILD_CONTEXT: "."
      DOCKERFILE: "services/server/Dockerfile"
  # ARM64 builds
  build-push-monitor-arm64:
    <<: *build-base-arm64
    environment:
      SERVICE: "monitor"
      DOCKER_BUILD_CONTEXT: "."
      DOCKERFILE: "services/monitor/Dockerfile"
  build-push-server-arm64:
    <<: *build-base-arm64
    environment:
      SERVICE: "server"
      DOCKER_BUILD_CONTEXT: "."
      DOCKERFILE: "services/server/Dockerfile"
  publish-multiarch-images:
    docker:
      - image: cimg/base:2024.12
    resource_class: small
    steps:
      - checkout
      - setup_remote_docker:
          version: docker23
      - run:
          name: Publish multiarch images
          no_output_timeout: 5m
          command: |
            ./.circleci/scripts/publish_multiarch_images.sh
  npm-publish:
    working_directory: ~/sourcify
    docker:
      - image: cimg/node:22.5.1
    steps:
      - checkout
      - run:
          name: Check Tag Prefix
          command: |
            if [[ "$CIRCLE_TAG" != "@ethereum-sourcify"* ]]; then
              echo "Skipping npm-publish as tag does not start with @ethereum-sourcify"
              circleci-agent step halt
            fi
      - run:
          name: install dependencies
          command: npm install
      - run:
          name: build everything
          command: npx lerna run build
      - run:
          name: Publish npm package
          command: ./.circleci/scripts/publish_to_npm.sh
